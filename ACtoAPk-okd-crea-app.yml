####################################################################
###              AutoRemediation of Ntechnology                  ###
####################################################################
##  REALIZA LA INSTALACION DE UN PAQUETE EN LINUX

- hosts: ntpocrh8005

  vars:

#    - paquete: Apache
    - archivo: instala-app.txt
    - cliente: Mesa Servicio
    - cliente2: Admin Automation
    - cliente3: AgileOps
    - destinatario: jruperto@n.technology
    - destinatario2: jmendieta@n.technology
    - destinatario3: mcarrillo@n.technology
#    - destinatario3: lgarduno@n.technology
    - emailpassw: 53gur1d4D!
    # - repositorio: https://github.com/cloudtobyte/web001
    # - proyecto: demontech3
    # - aplicacion: web001
  tasks:

# CAMBIA EL ESTADO DEL TICKETID A EN CURSO
  - name: Cambia el estado del Ticket a En Curso
    block:
      - set_fact: estadoTicket="En curso"
      - set_fact: resultTicket="Se da inicio a la atencion del Ticket"
      - name: Ejecuta script Python para actualizar ticket a En Curso
        ansible.builtin.command: "python3 /scripts/api/demo/api-put.py '{{ idTicket }}' '{{ estadoTicket }}' '{{resultTicket}}'" 
        environment:
          AUTHTOKEN: "1DE83DC8-4D7D-4FA9-9218-D239E53D3AB9"
        register: result_encurso
      - name: Mostrar resultado de cambio a En curso
        debug:
          var: result_encurso.stdout_lines
    ignore_errors: yes
    when: idTicket != None

################################################################################
## LANZA LA EJECUCION DEL PLAYBOOK DE REMEDIACION A LA SONDA ADECUADA

  - name: Lanza ejecucion de Playbook al Automation Probe
    ansible.builtin.uri:
      url: http://172.16.1.10/api/playbook/site24x7/exec
      method: POST
      headers: 
        Content-Type: application/json
      body_format: "json"
      return_content: true
      timeout: 500
      body: 
        cmmd: sudo ansible-playbook -i /ansible/invents/invent-demo -e "repositorio={{ repositorio }} proyecto={{ proyecto }} aplicacion={{ aplicacion }}" /ansible/plays/DemoOkd/DemoOkd-crea-app.yml
#        idTicket: "{{ idTicket }}" 
    register: info_output
    ignore_errors: yes
  - debug: var=info_output.json.output

################################################################################
## SE MANDA A ARCHIVO LOCAL EL RESULTADO DE LA TAREA

  - name: Crea el archivo temporal
    ansible.builtin.file:
      path: /temp/{{ archivo }}
      state: touch
      mode: '0755'

  - name: Agrega el resultado al archivo temporal
    ansible.builtin.lineinfile:
      path: /temp/{{ archivo }}
      line: "{{ info_output.json.output }}"

  - name: Agrega informacion de tarea fallida al archivo temporal
    ansible.builtin.lineinfile:
      path: /temp/{{ archivo }}
      line: "RESULTADO-AUTOMATION \n------------------------------------------------ \nResultado de la Tarea de Remediacion es : ESCALADO \nNO SE EJECUTO LA TAREA DE REMEDIACION, SERVIDOR {{ servidor }} NO ALCANZABLE "
    when: info_output.json.output is none
  
  - name: Filtra el resultado
    shell: awk '/RESULTADO-AUTOMATION/,/^}/ {print}' /temp/{{ archivo }}
    register: info_resultado
  - debug: var=info_resultado.stdout 

  - set_fact:
      resultTicket: "{{ info_resultado.stdout }} http://{{ aplicacion }}-{{ proyecto }}.apps.ntokd1.ntech/"
#  - set_fact: resultTicket="{{ info_resultado.stdout}}"

###############################################################################
## FILTRA SI ES EXITOSO O NO EXITOSO 

  - name: Buscar resultado en el archivo temporal
    shell: awk '/Resultado de la Tarea de Remediacion es ':' (EXITOSO|ESCALADO)/ {gsub(/^[ \t]+|[ \t]+$/, ""); gsub(/"/, "", $NF); sub(/,$/, "", $NF); print $NF}' /temp/{{ archivo }}
    register: codigo_retorno
  - debug: var=codigo_retorno.stdout
  
################################################################################## REALIZA CAMBIO DE ESTADO DEL TICKET DEPENDIENDO DEL RESULTADO

#Cuando la Tarea de Remediacion es Exitosa se cambia el estado a Solucionado
  - name: Cambia a Solucionado el Ticekt cuando es Exitoso
    block:
      - set_fact: estadoTicket="Solucionado"
      - name: Ejecuta script Python para actualizar ticket a Solucionado
        ansible.builtin.command: "python3 /scripts/api/demo/api-put.py '{{ idTicket }}' '{{ estadoTicket }}' '{{resultTicket}}'" 
        environment:
          AUTHTOKEN: "1DE83DC8-4D7D-4FA9-9218-D239E53D3AB9"
        register: result_status
      - name: Mostrar resultado
        debug:
          var: result_status.stdout_lines
    ignore_errors: yes
    when: codigo_retorno.stdout == "EXITOSO"

#Cuando la Tarea de Remediacion es No Exitosa se cambia el estado a Pendiente
  - name: Cambia a Pendiente el Ticket cuando el resultado es ESCALADO
    block:
      - set_fact: estadoTicket="Pendiente por proveedor"
      - name: Ejecuta script Python para actualizar ticket a Pendiente 
        ansible.builtin.command: "python3 /scripts/api/demo/api-put.py '{{ idTicket }}' '{{ estadoTicket }}' '{{resultTicket}}'" 
        environment:
          AUTHTOKEN: "1DE83DC8-4D7D-4FA9-9218-D239E53D3AB9"
        register: result_status
      - name: Mostrar resultado
        debug:
          var: result_status.stdout_lines
    ignore_errors: yes
    when: codigo_retorno.stdout == "ESCALADO"

# # Cuando la Tarea de Remediacion no se Ejecuta se cambia el estado a Pendiente
  - name: Cambia a Pendiente el Ticket cuando no se recibe resultado
    block:
      - set_fact: estadoTicket="Pendiente por proveedor"
      - name: Ejecuta script Python para actualizar ticket a Pendiente
        ansible.builtin.command: "python3 /scripts/api/demo/api-put.py '{{ idTicket }}' '{{ estadoTicket }}' '{{resultTicket}}'"
        environment:
          AUTHTOKEN: "1DE83DC8-4D7D-4FA9-9218-D239E53D3AB9"
        register: result_status
      - name: Mostrar resultado
        debug:
          var: result_status.stdout_lines
    ignore_errors: yes
    when: info_output.json.output is none

################################################################################
## ESPERA 30 SEGUNDOS

  - name: Esperar 30 segundos
    command: sleep 30
    register: sleep_result
  
  - debug: var=sleep_result 

################################################################################
## REALIZA LA NOTIFICACION DE TERMINACION DEL PLAYBOOK Y ENTREGA EL RESULTADO

  - mail:
        host: smtp.office365.com
        port: 587
        secure: starttls
        username: centro.monitoreo@n.technology
        password: "{{ emailpassw }}"              
        from: centro.monitoreo@n.technology
        to: "{{ cliente }} <{{ destinatario }}>"
        cc: "{{ cliente2 }} <{{ destinatario2 }}>"
        bcc: "{{ cliente3 }} <{{ destinatario3 }}>"
        subject: "Se atendio el Requerimiento de desplieggue de aplicacion" 
        subtype: html

        body: | 
                <!DOCTYPE html>
                <html>
                <head>
                  <style>

                    table {
                      border-collapse: collapse;
                      width: 100%;
                    }
                    th, td {
                      border: 1px solid black;
                      padding: 8px;
                      text-align: left;
                    }
                  </style>

                </head>
                <body>
                  <h3>Se atendio la solicitud de despliegue de aplicaci√≥n en Openshift: {{ aplicacion }} </h3>
                  
                  <h4>Ticket-ID del evento reportado: {{ idTicket }} </h4>

                  <h4> Resultado de la Ejecucion </h4>
                  
                  <pre>{{ info_resultado.stdout | regex_replace("[\[\]{}]", "") }}</pre>

                  <pre>La url de la aplicacion es: http://{{ aplicacion }}-{{ proyecto }}.apps.ntokd1.ntech/</pre>

                  <hr>

                  <center>   
                  <strong><em>AUTOREMEDIATION    NTECH</em></strong>
                  </center>

                  </body>
                </html>
    delegate_to: localhost
    ignore_errors: yes

#####################################################################
## SE REMUEVE EL ARCHIVO TEMPORAL

  - name: Remueve el archivo temporal
    ansible.builtin.file:
      path: /temp/{{ archivo }}
      state: absent